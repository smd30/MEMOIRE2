# Script pour tester la persistance des actions admin
Write-Host "üîß Test de persistance des actions admin" -ForegroundColor Green
Write-Host ""

# V√©rifier que le backend est en cours d'ex√©cution
Write-Host "üì° V√©rification du backend..." -ForegroundColor Yellow
try {
    $response = Invoke-RestMethod -Uri "http://localhost:8000/api/health" -Method GET -TimeoutSec 5
    Write-Host "‚úÖ Backend op√©rationnel" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Backend non accessible. D√©marrage..." -ForegroundColor Red
    Start-Process powershell -ArgumentList "-NoExit", "-Command", "cd backend; php artisan serve --host=0.0.0.0 --port=8000"
    Start-Sleep -Seconds 3
}

Write-Host ""
Write-Host "üîß Corrections apport√©es:" -ForegroundColor Cyan
Write-Host "   ‚úÖ Service AdminService corrig√©" -ForegroundColor Green
Write-Host "   ‚úÖ Authentification ajout√©e" -ForegroundColor Green
Write-Host "   ‚úÖ URLs API corrig√©es" -ForegroundColor Green
Write-Host "   ‚úÖ Composant Admin corrig√©" -ForegroundColor Green
Write-Host "   ‚úÖ Appels API r√©els" -ForegroundColor Green
Write-Host ""
Write-Host "üìã Fonctionnalit√©s test√©es:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Chargement des utilisateurs depuis l'API" -ForegroundColor White
Write-Host "   ‚Ä¢ Cr√©ation d'utilisateur via l'API" -ForegroundColor White
Write-Host "   ‚Ä¢ Blocage d'utilisateur via l'API" -ForegroundColor White
Write-Host "   ‚Ä¢ D√©blocage d'utilisateur via l'API" -ForegroundColor White
Write-Host "   ‚Ä¢ Suppression d'utilisateur via l'API" -ForegroundColor White
Write-Host "   ‚Ä¢ Persistance en base de donn√©es" -ForegroundColor White
Write-Host ""
Write-Host "üéØ Tests √† effectuer:" -ForegroundColor Cyan
Write-Host "   1. Se connecter en tant qu'admin" -ForegroundColor White
Write-Host "   2. Acc√©der √† l'interface admin" -ForegroundColor White
Write-Host "   3. Cr√©er un nouvel utilisateur" -ForegroundColor White
Write-Host "   4. V√©rifier qu'il appara√Æt dans la liste" -ForegroundColor White
Write-Host "   5. Bloquer l'utilisateur" -ForegroundColor White
Write-Host "   6. Actualiser la page" -ForegroundColor White
Write-Host "   7. V√©rifier que le statut 'bloqu√©' est conserv√©" -ForegroundColor White
Write-Host "   8. D√©bloquer l'utilisateur" -ForegroundColor White
Write-Host "   9. Actualiser la page" -ForegroundColor White
Write-Host "   10. V√©rifier que le statut 'actif' est conserv√©" -ForegroundColor White
Write-Host ""
Write-Host "üîç V√©rifications de persistance:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Cr√©ation ‚Üí Base de donn√©es" -ForegroundColor White
Write-Host "   ‚Ä¢ Blocage ‚Üí Base de donn√©es" -ForegroundColor White
Write-Host "   ‚Ä¢ D√©blocage ‚Üí Base de donn√©es" -ForegroundColor White
Write-Host "   ‚Ä¢ Suppression ‚Üí Base de donn√©es" -ForegroundColor White
Write-Host "   ‚Ä¢ Actualisation ‚Üí Donn√©es persist√©es" -ForegroundColor White
Write-Host ""
Write-Host "üõ°Ô∏è S√©curit√©:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Token d'authentification requis" -ForegroundColor White
Write-Host "   ‚Ä¢ R√¥le admin v√©rifi√©" -ForegroundColor White
Write-Host "   ‚Ä¢ Validation des donn√©es" -ForegroundColor White
Write-Host "   ‚Ä¢ Gestion des erreurs" -ForegroundColor White
Write-Host ""
Write-Host "üåê Acc√®s:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Frontend: http://localhost:4200" -ForegroundColor White
Write-Host "   ‚Ä¢ Backend: http://localhost:8000" -ForegroundColor White
Write-Host "   ‚Ä¢ API Admin: http://localhost:8000/api/admin" -ForegroundColor White
Write-Host ""
Write-Host "üìä Donn√©es persist√©es:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Informations utilisateur (nom, email, r√¥le, statut)" -ForegroundColor White
Write-Host "   ‚Ä¢ Donn√©es de session (last_login_at)" -ForegroundColor White
Write-Host "   ‚Ä¢ Pr√©f√©rences utilisateur (user_data)" -ForegroundColor White
Write-Host "   ‚Ä¢ Historique des modifications" -ForegroundColor White
Write-Host ""
Write-Host "üîß Debug:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Console du navigateur pour voir les erreurs" -ForegroundColor White
Write-Host "   ‚Ä¢ Network tab pour voir les appels API" -ForegroundColor White
Write-Host "   ‚Ä¢ Logs backend pour voir les requ√™tes" -ForegroundColor White
Write-Host ""
Write-Host "Press any key to continue..."
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")





