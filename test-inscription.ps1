# Script de test pour le syst√®me d'inscription
Write-Host "=== Test du Syst√®me d'Inscription ===" -ForegroundColor Green
Write-Host ""

# V√©rifier si les serveurs sont en cours d'ex√©cution
Write-Host "1. V√©rification des serveurs..." -ForegroundColor Yellow

$backendRunning = $false
$frontendRunning = $false

try {
    $backendResponse = Invoke-WebRequest -Uri "http://localhost:8000/api" -Method GET -TimeoutSec 5 -ErrorAction SilentlyContinue
    if ($backendResponse.StatusCode -eq 200) {
        $backendRunning = $true
        Write-Host "‚úÖ Backend Laravel: En cours d'ex√©cution sur http://localhost:8000" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ùå Backend Laravel: Non accessible sur http://localhost:8000" -ForegroundColor Red
}

try {
    $frontendResponse = Invoke-WebRequest -Uri "http://localhost:4200" -Method GET -TimeoutSec 5 -ErrorAction SilentlyContinue
    if ($frontendResponse.StatusCode -eq 200) {
        $frontendRunning = $true
        Write-Host "‚úÖ Frontend Angular: En cours d'ex√©cution sur http://localhost:4200" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ùå Frontend Angular: Non accessible sur http://localhost:4200" -ForegroundColor Red
}

Write-Host ""

# D√©marrer les serveurs si n√©cessaire
if (-not $backendRunning) {
    Write-Host "2. D√©marrage du backend..." -ForegroundColor Yellow
    Write-Host "   Ex√©cution: cd backend; php artisan serve --host=0.0.0.0 --port=8000" -ForegroundColor Cyan
    Start-Process powershell -ArgumentList "-Command", "cd backend; php artisan serve --host=0.0.0.0 --port=8000" -WindowStyle Minimized
    Write-Host "   ‚è≥ Attente du d√©marrage du backend..." -ForegroundColor Yellow
    Start-Sleep -Seconds 10
}

if (-not $frontendRunning) {
    Write-Host "3. D√©marrage du frontend..." -ForegroundColor Yellow
    Write-Host "   Ex√©cution: cd frontend; npm start" -ForegroundColor Cyan
    Start-Process powershell -ArgumentList "-Command", "cd frontend; npm start" -WindowStyle Minimized
    Write-Host "   ‚è≥ Attente du d√©marrage du frontend..." -ForegroundColor Yellow
    Start-Sleep -Seconds 15
}

Write-Host ""

# Test de l'API d'inscription
Write-Host "4. Test de l'API d'inscription..." -ForegroundColor Yellow

$testData = @{
    nom = "Dupont"
    prenom = "Jean"
    email = "jean.dupont.test@example.com"
    Telephone = "0123456789"
    adresse = "123 Rue de la Paix, 75001 Paris"
    MotDePasse = "password123"
    MotDePasse_confirmation = "password123"
}

try {
    $response = Invoke-RestMethod -Uri "http://localhost:8000/api/auth/register" -Method POST -Body ($testData | ConvertTo-Json) -ContentType "application/json"
    
    if ($response.success) {
        Write-Host "‚úÖ Test d'inscription r√©ussi !" -ForegroundColor Green
        Write-Host "   Utilisateur cr√©√©: $($response.data.user.nom) $($response.data.user.prenom)" -ForegroundColor Cyan
        Write-Host "   Email: $($response.data.user.email)" -ForegroundColor Cyan
        Write-Host "   T√©l√©phone: $($response.data.user.Telephone)" -ForegroundColor Cyan
        Write-Host "   Adresse: $($response.data.user.adresse)" -ForegroundColor Cyan
        Write-Host "   Token g√©n√©r√©: $($response.data.token.Substring(0, 20))..." -ForegroundColor Cyan
    } else {
        Write-Host "‚ùå Test d'inscription √©chou√©: $($response.message)" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå Erreur lors du test d'inscription: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host ""

# Ouvrir les interfaces
Write-Host "5. Ouverture des interfaces..." -ForegroundColor Yellow

Write-Host "   üåê Ouverture de l'interface d'inscription..." -ForegroundColor Cyan
Start-Process "http://localhost:4200/register"

Write-Host "   üìã Ouverture du fichier de test..." -ForegroundColor Cyan
Start-Process "test-inscription.html"

Write-Host ""

# Instructions finales
Write-Host "=== Instructions de Test ===" -ForegroundColor Green
Write-Host ""
Write-Host "üéØ Champs d'inscription conformes aux diagrammes UML:" -ForegroundColor Yellow
Write-Host "   ‚Ä¢ Nom (obligatoire)" -ForegroundColor White
Write-Host "   ‚Ä¢ Pr√©nom (obligatoire)" -ForegroundColor White
Write-Host "   ‚Ä¢ Email (obligatoire)" -ForegroundColor White
Write-Host "   ‚Ä¢ T√©l√©phone (obligatoire)" -ForegroundColor White
Write-Host "   ‚Ä¢ Adresse (obligatoire)" -ForegroundColor White
Write-Host "   ‚Ä¢ Mot de passe (obligatoire, min 8 caract√®res)" -ForegroundColor White
Write-Host "   ‚Ä¢ Confirmation du mot de passe (obligatoire)" -ForegroundColor White
Write-Host ""
Write-Host "üîó Liens utiles:" -ForegroundColor Yellow
Write-Host "   ‚Ä¢ Frontend: http://localhost:4200" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Inscription: http://localhost:4200/register" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Backend API: http://localhost:8000/api" -ForegroundColor Cyan
Write-Host ""
Write-Host "‚úÖ Le syst√®me d'inscription est maintenant conforme √† vos diagrammes UML !" -ForegroundColor Green
Write-Host ""
Write-Host "Appuyez sur une touche pour fermer..." -ForegroundColor Gray
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")
