# Script pour tester les donn√©es utilisateur
Write-Host "üß™ Test des donn√©es utilisateur" -ForegroundColor Green
Write-Host ""

# V√©rifier que le backend est en cours d'ex√©cution
Write-Host "üì° V√©rification du backend..." -ForegroundColor Yellow
try {
    $response = Invoke-RestMethod -Uri "http://localhost:8000/api/health" -Method GET -TimeoutSec 5
    Write-Host "‚úÖ Backend op√©rationnel" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Backend non accessible. D√©marrage..." -ForegroundColor Red
    Start-Process powershell -ArgumentList "-NoExit", "-Command", "cd backend; php artisan serve --host=0.0.0.0 --port=8000"
    Start-Sleep -Seconds 3
}

Write-Host ""
Write-Host "üîß Test des nouvelles fonctionnalit√©s:" -ForegroundColor Cyan
Write-Host "   ‚úÖ Routes API cr√©√©es" -ForegroundColor Green
Write-Host "   ‚úÖ Contr√¥leur AuthController mis √† jour" -ForegroundColor Green
Write-Host "   ‚úÖ Migration user_data ex√©cut√©e" -ForegroundColor Green
Write-Host "   ‚úÖ Mod√®le User mis √† jour" -ForegroundColor Green
Write-Host ""
Write-Host "üìã Endpoints disponibles:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ GET /api/user/data - R√©cup√©rer les donn√©es utilisateur" -ForegroundColor White
Write-Host "   ‚Ä¢ PUT /api/user/data - Mettre √† jour les donn√©es utilisateur" -ForegroundColor White
Write-Host "   ‚Ä¢ POST /api/user/sync - Synchroniser les donn√©es" -ForegroundColor White
Write-Host "   ‚Ä¢ GET /api/user/export - Exporter les donn√©es" -ForegroundColor White
Write-Host "   ‚Ä¢ POST /api/user/import - Importer les donn√©es" -ForegroundColor White
Write-Host "   ‚Ä¢ GET /api/user/stats - Statistiques utilisateur" -ForegroundColor White
Write-Host "   ‚Ä¢ POST /api/auth/refresh - Rafra√Æchir le token" -ForegroundColor White
Write-Host ""
Write-Host "üéØ Tests √† effectuer:" -ForegroundColor Cyan
Write-Host "   1. Cr√©er un compte utilisateur" -ForegroundColor White
Write-Host "   2. Se connecter" -ForegroundColor White
Write-Host "   3. V√©rifier que les donn√©es utilisateur sont cr√©√©es automatiquement" -ForegroundColor White
Write-Host "   4. Modifier les pr√©f√©rences via l'interface" -ForegroundColor White
Write-Host "   5. Tester la synchronisation" -ForegroundColor White
Write-Host "   6. V√©rifier les statistiques" -ForegroundColor White
Write-Host ""
Write-Host "üîç V√©rifications:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Colonne user_data ajout√©e √† la table users" -ForegroundColor White
Write-Host "   ‚Ä¢ Colonne last_login_at ajout√©e" -ForegroundColor White
Write-Host "   ‚Ä¢ Donn√©es par d√©faut cr√©√©es automatiquement" -ForegroundColor White
Write-Host "   ‚Ä¢ Gestion des erreurs 500 corrig√©e" -ForegroundColor White
Write-Host ""
Write-Host "üåê Acc√®s:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Frontend: http://localhost:4200" -ForegroundColor White
Write-Host "   ‚Ä¢ Backend: http://localhost:8000" -ForegroundColor White
Write-Host ""
Write-Host "Press any key to continue..."
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")
