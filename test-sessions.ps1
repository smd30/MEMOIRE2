# Script pour tester la gestion des sessions utilisateurs
Write-Host "üß™ Test de la gestion des sessions utilisateurs" -ForegroundColor Green
Write-Host ""

# D√©marrer le serveur backend Laravel
Write-Host "üì° D√©marrage du serveur backend..." -ForegroundColor Yellow
Start-Process powershell -ArgumentList "-NoExit", "-Command", "cd backend; php artisan serve --host=0.0.0.0 --port=8000"

# Attendre un peu pour que le backend d√©marre
Start-Sleep -Seconds 3

# D√©marrer le serveur frontend Angular
Write-Host "üåê D√©marrage du serveur frontend..." -ForegroundColor Yellow
Start-Process powershell -ArgumentList "-NoExit", "-Command", "cd frontend; ng serve --port=4200"

# Attendre un peu pour que le frontend d√©marre
Start-Sleep -Seconds 5

Write-Host "‚úÖ Serveurs d√©marr√©s avec succ√®s!" -ForegroundColor Green
Write-Host ""
Write-Host "üîê Test de la gestion des sessions:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Frontend (Angular): http://localhost:4200" -ForegroundColor White
Write-Host "   ‚Ä¢ Backend (Laravel): http://localhost:8000" -ForegroundColor White
Write-Host ""
Write-Host "üìã Fonctionnalit√©s de session test√©es:" -ForegroundColor Cyan
Write-Host "   ‚úÖ Authentification avec tokens JWT" -ForegroundColor Green
Write-Host "   ‚úÖ Gestion des sessions avec expiration" -ForegroundColor Green
Write-Host "   ‚úÖ Surveillance de l'activit√© utilisateur" -ForegroundColor Green
Write-Host "   ‚úÖ Renouvellement automatique des tokens" -ForegroundColor Green
Write-Host "   ‚úÖ Stockage s√©curis√© des donn√©es utilisateur" -ForegroundColor Green
Write-Host "   ‚úÖ Synchronisation des pr√©f√©rences" -ForegroundColor Green
Write-Host "   ‚úÖ Protection contre les sessions expir√©es" -ForegroundColor Green
Write-Host ""
Write-Host "üéØ Tests √† effectuer:" -ForegroundColor Cyan
Write-Host "   1. Cr√©er un compte utilisateur" -ForegroundColor White
Write-Host "   2. Se connecter et v√©rifier la session" -ForegroundColor White
Write-Host "   3. Cliquer sur l'ic√¥ne d'info pour voir les d√©tails de session" -ForegroundColor White
Write-Host "   4. Tester le rafra√Æchissement de session" -ForegroundColor White
Write-Host "   5. Tester la synchronisation des donn√©es" -ForegroundColor White
Write-Host "   6. Attendre l'expiration de session (24h)" -ForegroundColor White
Write-Host "   7. Tester la d√©connexion automatique" -ForegroundColor White
Write-Host ""
Write-Host "üîß Fonctionnalit√©s de session:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Session de 24 heures avec surveillance d'activit√©" -ForegroundColor White
Write-Host "   ‚Ä¢ Renouvellement automatique des tokens" -ForegroundColor White
Write-Host "   ‚Ä¢ Stockage local des pr√©f√©rences utilisateur" -ForegroundColor White
Write-Host "   ‚Ä¢ Synchronisation avec le serveur" -ForegroundColor White
Write-Host "   ‚Ä¢ Protection contre les attaques CSRF" -ForegroundColor White
Write-Host "   ‚Ä¢ Gestion des erreurs d'authentification" -ForegroundColor White
Write-Host ""
Write-Host "üìä Donn√©es stock√©es par utilisateur:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Pr√©f√©rences (th√®me, langue, notifications)" -ForegroundColor White
Write-Host "   ‚Ä¢ Historique des activit√©s" -ForegroundColor White
Write-Host "   ‚Ä¢ Donn√©es de session (token, expiration)" -ForegroundColor White
Write-Host "   ‚Ä¢ Statistiques d'utilisation" -ForegroundColor White
Write-Host ""
Write-Host "üõ°Ô∏è S√©curit√© impl√©ment√©e:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Tokens JWT avec expiration" -ForegroundColor White
Write-Host "   ‚Ä¢ Surveillance de l'activit√© utilisateur" -ForegroundColor White
Write-Host "   ‚Ä¢ D√©connexion automatique en cas d'inactivit√©" -ForegroundColor White
Write-Host "   ‚Ä¢ Protection contre les attaques XSS/CSRF" -ForegroundColor White
Write-Host "   ‚Ä¢ Validation des donn√©es c√¥t√© client et serveur" -ForegroundColor White
Write-Host ""
Write-Host "Press any key to continue..."
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")





