# Dockerfile Backend optimis√© pour le pipeline DevOps
FROM php:8.2-fpm

# Installer les d√©pendances syst√®me
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    libzip-dev \
    zip \
    unzip \
    && docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath gd zip

# Installer Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# D√©finir le r√©pertoire de travail
WORKDIR /var/www

# Copier les fichiers de d√©pendances
COPY composer.json composer.lock ./

# Installer les d√©pendances PHP
RUN composer install --no-dev --optimize-autoloader --no-scripts

# Copier le code source
COPY . /var/www

# Installer les d√©pendances PHP (avec scripts)
RUN composer install --no-dev --optimize-autoloader

# Cr√©er le fichier .env depuis .env.example
RUN cp .env.example .env

# G√©n√©rer la cl√© d'application
RUN php artisan key:generate --force

# Configurer les permissions
RUN chown -R www-data:www-data /var/www \
    && chmod -R 755 /var/www/storage \
    && chmod -R 755 /var/www/bootstrap/cache

# Cr√©er le script de d√©marrage
RUN echo '#!/bin/bash' > /start.sh && \
    echo 'echo "üöÄ Starting MEMOIRE2 Backend..."' >> /start.sh && \
    echo 'php artisan migrate --force' >> /start.sh && \
    echo 'php artisan config:cache' >> /start.sh && \
    echo 'php artisan route:cache' >> /start.sh && \
    echo 'php artisan view:cache' >> /start.sh && \
    echo 'php-fpm' >> /start.sh && \
    chmod +x /start.sh

# Exposer le port 9000 (PHP-FPM)
EXPOSE 9000

# D√©marrer avec le script personnalis√©
CMD ["/start.sh"]
