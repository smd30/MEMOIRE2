version: '3.8'

services:
  # Base de données PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: assurance_auto_db
    environment:
      POSTGRES_DB: assurance_auto
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data:/data
    networks:
      - assurance_network

  # Redis pour cache et sessions
  redis:
    image: redis:7-alpine
    container_name: assurance_auto_redis
    ports:
      - "6379:6379"
    networks:
      - assurance_network

  # Backend Laravel
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: assurance_auto_backend
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: assurance_auto
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      REDIS_HOST: redis
      REDIS_PORT: 6379
      COMPANY_API_URL: http://company-api:3000
      STRIPE_KEY: pk_test_51H1234567890
      STRIPE_SECRET: sk_test_51H1234567890
      STRIPE_WEBHOOK_SECRET: whsec_test_1234567890
      JWT_SECRET: your-super-secret-jwt-key-here
      APP_KEY: base64:your-super-secret-app-key-here
      MAIL_MAILER: smtp
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_USERNAME: null
      MAIL_PASSWORD: null
      MAIL_ENCRYPTION: null
      MAIL_FROM_ADDRESS: noreply@assurance-auto.com
      MAIL_FROM_NAME: "Assurance Auto"
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/var/www/html
      - ./data:/data
    depends_on:
      - db
      - redis
    networks:
      - assurance_network
    command: >
      sh -c "
        composer install --no-interaction &&
        php artisan key:generate &&
        php artisan migrate --force &&
        php artisan serve --host=0.0.0.0 --port=8000
      "

  # Company API (service séparé)
  company-api:
    build:
      context: ./company-api
      dockerfile: Dockerfile
    container_name: assurance_auto_company_api
    environment:
      NODE_ENV: development
      PORT: 3000
      JWT_SECRET: company-api-secret-key
      QR_SECRET: qr-code-signature-secret
      DATABASE_URL: postgresql://postgres:postgres@db:5432/assurance_auto
    ports:
      - "3000:3000"
    volumes:
      - ./company-api:/app
      - ./data:/data
    depends_on:
      - db
    networks:
      - assurance_network
    command: >
      sh -c "
        npm install &&
        npm run dev
      "

  # Frontend Angular
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: assurance_auto_frontend
    environment:
      NODE_ENV: development
      API_URL: http://localhost:8000
      COMPANY_API_URL: http://localhost:3000
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
      - company-api
    networks:
      - assurance_network
    command: >
      sh -c "
        npm install &&
        npm start
      "

  # Serveur mail de développement
  mailhog:
    image: mailhog/mailhog:latest
    container_name: assurance_auto_mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Interface web
    networks:
      - assurance_network

  # Nginx pour le backend (optionnel, pour la production)
  nginx:
    image: nginx:alpine
    container_name: assurance_auto_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./backend/public:/var/www/html/public
    depends_on:
      - backend
    networks:
      - assurance_network
    profiles:
      - production

volumes:
  postgres_data:

networks:
  assurance_network:
    driver: bridge

