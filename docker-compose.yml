version: '3.8'

services:
  # Base de données MySQL
  mysql:
    image: mysql:8.0
    container_name: kds-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-kds_root_password}
      MYSQL_DATABASE: ${DB_DATABASE:-kds_assurance}
      MYSQL_USER: ${DB_USERNAME:-kds_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-kds_password}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - kds-network
    command: --default-authentication-plugin=mysql_native_password

  # Cache Redis
  redis:
    image: redis:7-alpine
    container_name: kds-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - kds-network
    command: redis-server --appendonly yes

  # Application Laravel
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: kds-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./backend:/var/www/html
      - ./storage:/var/www/html/storage/app/public
    environment:
      - APP_ENV=${APP_ENV:-production}
      - APP_DEBUG=${APP_DEBUG:-false}
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE:-kds_assurance}
      - DB_USERNAME=${DB_USERNAME:-kds_user}
      - DB_PASSWORD=${DB_PASSWORD:-kds_password}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MAIL_MAILER=${MAIL_MAILER:-smtp}
      - MAIL_HOST=${MAIL_HOST:-smtp.gmail.com}
      - MAIL_PORT=${MAIL_PORT:-587}
      - MAIL_USERNAME=${MAIL_USERNAME:-kdsassur@gmail.com}
      - MAIL_PASSWORD=${MAIL_PASSWORD:-drta mgti ioxp hwwo}
      - MAIL_ENCRYPTION=${MAIL_ENCRYPTION:-tls}
      - MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS:-kdsassur@gmail.com}
      - MAIL_FROM_NAME=${MAIL_FROM_NAME:-KDS Assurance}
    depends_on:
      - mysql
      - redis
    networks:
      - kds-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: kds-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/sites:/etc/nginx/sites-available
      - ./docker/nginx/ssl:/etc/nginx/ssl
      - ./storage:/var/www/storage
    depends_on:
      - app
    networks:
      - kds-network

  # Frontend Angular (si nécessaire)
  frontend:
    image: nginx:alpine
    container_name: kds-frontend
    restart: unless-stopped
    ports:
      - "4200:80"
    volumes:
      - ./frontend/dist:/usr/share/nginx/html
      - ./docker/nginx/frontend.conf:/etc/nginx/conf.d/default.conf
    networks:
      - kds-network

  # Monitoring avec Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: kds-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - kds-network

  # Grafana pour les dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: kds-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - kds-network

volumes:
  mysql_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  kds-network:
    driver: bridge